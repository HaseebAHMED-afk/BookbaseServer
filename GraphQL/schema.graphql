type Event {
    result: String!
}

type Book{
    id: ID!,
    name:String!,
    author: String,
    yearOfPublishing: String!,
    description: String!,
    rating: String!,
    languag: String!,
    genre: String!,
    coverImageUrl: String!
}

type BookInput{
    name:String!,
    author: String,
    yearOfPublishing: String!,
    description: String!,
    rating: String!,
    languag: String!,
    genre: String!,
    coverImageUrl: String!
}

type Author {
    id: ID!,
    fullName: String!,
    age: Number!,
    country: String!,
    preferedLanguage: String!,
    genreOfInterest: [String!],
    authorEmail: String!,
    verified: String!
}

type AuthorInput {
    fullName: String!,
    age: Number!,
    country: String!,
    preferedLanguage: String!,
    genreOfInterest: [String!],
    authorEmail: String!,
    verified: String!
}

type VerificationCodes {
    id: ID!,
    authorID: String!,
    code: String!
}

type VerificationInput {
    authorID: String!,
    code: String!
}

type Query{
    getAllBooks: [Book!] ,
    getBookById (bookId: String!) : [Book!],
    getBooksByAuthor: (author: String!) : [Book!]
}

type Mutation {
    addAuthor(author:AuthorInput!) : Event
    verifyAuthor(code: VerificationInput!) : Event 
    addBook(book:BookInput!) : Event
    rateBook(rating: String!) : Event
    updateBook(book: BookInput!) : Event
    deleteBook(bookId: String! ) : Event
}